name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Analyze project source
        run: flutter analyze
        
      - name: Run tests
        run: flutter test
        
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

  release:
    needs: verify
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.new-version }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Install semantic-release dependencies
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/exec
          
      - name: Create .releaserc
        run: |
          cat > .releaserc << EOF
          {
            "branches": ["main"],
            "tagFormat": "\${version}",
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/exec", {
                "prepareCmd": "sed -i 's/version: .*/version: \${nextRelease.version}/g' pubspec.yaml"
              }],
              ["@semantic-release/git", {
                "assets": ["CHANGELOG.md", "pubspec.yaml"],
                "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
              }],
              ["@semantic-release/github", {
                "assets": []
              }]
            ]
          }
          EOF

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: version
        run: |
          version=$(semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo "no-new-version")
          echo "new-version=$version" >> $GITHUB_OUTPUT
          semantic-release

  publish:
    permissions:
      id-token: write # Required for authentication using OIDC
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.version != 'no-new-version'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Publish to pub.dev
        run: dart pub publish -f