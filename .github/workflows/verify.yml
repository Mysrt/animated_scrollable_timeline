name: Verify

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Analyze project source
        run: flutter analyze
        
      - name: Run tests
        run: flutter test
        
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Setup Melos
        run: melos bootstrap
        
      - name: Run Melos analyze
        run: melos run analyze
        
      - name: Run Melos test
        run: melos run test

  release:
    needs: verify
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.new-version }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Install Melos
        run: dart pub global activate melos
        
      - name: Setup Melos
        run: melos bootstrap
        
      - name: Version packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: version
        run: |
          melos version --yes
          version=$(grep "version:" pubspec.yaml | cut -d' ' -f2)
          echo "new-version=$version" >> $GITHUB_OUTPUT
          
      - name: Publish to pub.dev
        if: steps.version.outputs.new-version != 'no-new-version'
        # env:
        #   PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
        run: |
          melos publish --yes